version: "3.9"

x-env: &odoo_env
  TZ: Asia/Manila
  # app config
  ANTHROPIC_API_KEY: ${ANTHROPIC_API_KEY:-}
  # db config (Odoo reads from odoo.conf; Postgres vars are for the db container)
  PGUSER: ${POSTGRES_USER:-odoo}
  PGPASSWORD: ${POSTGRES_PASSWORD:-odoo}

services:
  db:
    image: postgres:15
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-odoo}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-odoo}
      POSTGRES_DB: ${POSTGRES_DB:-postgres}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-odoo} -d ${POSTGRES_DB:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 12
    volumes:
      - dbdata:/var/lib/postgresql/data
    restart: unless-stopped

  odoo:
    image: ${ODOO_IMAGE:-jgtolentino/insightpulse-odoo}:${ODOO_IMAGE_TAG:-latest}
    depends_on:
      db:
        condition: service_healthy
    environment:
      <<: *odoo_env
    volumes:
      # filestore persistence (default location for odoo user)
      - odoodata:/var/lib/odoo
      # mount your extra addons next to deploy/ (../custom_addons on the server)
      - ../addons:/mnt/extra-addons:rw
      # ship your odoo.conf via rsync to ../config/odoo/odoo.conf
      - ../config/odoo/odoo.conf:/etc/odoo/odoo.conf:ro
    ports:
      - "${ODOO_HOST_PORT:-8069}:8069"
    healthcheck:
      test: ["CMD-SHELL", "curl -fsSL --max-time 4 http://127.0.0.1:8069/web/login >/dev/null || exit 1"]
      interval: 15s
      timeout: 5s
      retries: 20
    restart: unless-stopped

volumes:
  dbdata:
  odoodata:
