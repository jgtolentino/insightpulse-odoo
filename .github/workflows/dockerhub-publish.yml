name: dockerhub-publish

on:
  push:
    branches: [ main ]
    tags: [ "v*" ]
  workflow_dispatch:

env:
  DOCKER_REPO: ${{ secrets.DOCKERHUB_USERNAME }}/insightpulse-odoo
  ODOO_VERSION: "19.0"

permissions:
  contents: read
  packages: read
  security-events: write   # for SARIF upload

concurrency:
  group: dockerhub-publish-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint-actions:
    name: Lint GitHub Actions (actionlint)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: actionlint
        uses: reviewdog/action-actionlint@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          reporter: github-check
          level: error

  lint-dockerfile:
    name: Lint Dockerfile (hadolint)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: hadolint
        uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: Dockerfile
          failure-threshold: error
          format: sarif
          output-file: hadolint.sarif
      - name: Upload SARIF to Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: hadolint.sarif

  build-and-push:
    name: Build & Push (Docker Hub)
    needs: [lint-actions, lint-dockerfile]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.DOCKER_REPO }}
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=sha,prefix=sha-,format=long
            type=ref,event=tag

      - name: Build & Push (linux/amd64)
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          platforms: linux/amd64
          build-args: |
            ODOO_VERSION=${{ env.ODOO_VERSION }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          provenance: true
          sbom: true
