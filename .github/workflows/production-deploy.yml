name: production-deploy
on:
  workflow_dispatch: {}
  workflow_run:
    workflows: ["dockerhub-publish"]
    types: [completed]
permissions: { contents: read }
jobs:
  deploy:
    if: ${{ github.event_name == 'workflow_dispatch' || github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to production droplet
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.PRODUCTION_HOST }}
          username: ${{ secrets.PRODUCTION_USER }}
          key: ${{ secrets.PRODUCTION_SSH_KEY }}
          script: |
            set -e
            cd ~/insightpulse-odoo

            echo "📁 Setting up directory..."
            mkdir -p ~/insightpulse-odoo
            cd ~/insightpulse-odoo

            # Clone or update repository
            if [ ! -d ".git" ]; then
                echo "📦 Cloning repository..."
                git clone https://github.com/jgtolentino/insightpulse-odoo.git .
            else
                echo "🔄 Pulling latest changes..."
                git pull origin main
            fi

            echo "🐳 Pulling latest Docker images from registry..."
            docker compose pull odoo

            echo "🚀 Restarting services with new images..."
            docker compose up -d --force-recreate odoo

            DB="${{ secrets.ODOO_DB }}"
            echo "🔄 Updating Odoo modules..."
            docker compose exec -T odoo odoo shell -d "$DB" -c "env['ir.module.module'].update_list()"

            echo "🔄 Upgrading all modules..."
            docker compose exec -T odoo odoo -c /etc/odoo/odoo.conf -d "$DB" -u all --stop-after-init

            echo "✅ Production deployment completed successfully!"
            echo "🌐 Odoo available at: http://${{ secrets.PRODUCTION_HOST }}:8069"
