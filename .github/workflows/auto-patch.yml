name: Auto-Patch Odoo Issues

on:
  push:
    branches: [main, develop]
    paths:
      - 'addons/**/__manifest__.py'
      - 'requirements.txt'
      - '.github/workflows/auto-patch.yml'
  schedule:
    - cron: '0 2 * * *'  # Daily at 2 AM UTC
  workflow_dispatch:

env:
  PYTHON_VERSION: '3.11'

jobs:
  auto-fix-dependencies:
    name: Auto-Fix Dependencies & Manifests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libxml2-dev libxslt1-dev libldap2-dev \
            libsasl2-dev libssl-dev libpq-dev \
            postgresql-client

      - name: Run dependency auto-fixer
        id: autofix
        run: |
          python scripts/auto-fix-dependencies.py
        continue-on-error: true

      - name: Check for changes
        id: changes
        run: |
          if [[ -n $(git status --porcelain) ]]; then
            echo "has_changes=true" >> $GITHUB_OUTPUT
            git diff --stat
          else
            echo "has_changes=false" >> $GITHUB_OUTPUT
          fi

      - name: Create auto-fix PR
        if: steps.changes.outputs.has_changes == 'true'
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: |
            fix(auto): auto-patch Odoo dependencies and manifests

            - Auto-fixed manifest errors (missing license, incorrect types)
            - Generated requirements-auto.txt from addon dependencies
            - Validated circular dependencies

            ü§ñ Generated by Auto-Patch workflow
          branch: auto-fix/dependencies-${{ github.run_number }}
          title: 'ü§ñ Auto-fix: Odoo dependencies and manifest errors'
          body: |
            ## Auto-Generated Fixes

            This PR contains automated fixes for common Odoo deployment issues:

            ### Changes Made
            - ‚úÖ Fixed manifest errors (license, depends, data fields)
            - ‚úÖ Generated comprehensive requirements.txt
            - ‚úÖ Validated circular dependencies
            - ‚úÖ Checked Python and PostgreSQL versions

            ### Validation Results
            See workflow logs for detailed validation output.

            ### Review Checklist
            - [ ] Review auto-generated requirements-auto.txt
            - [ ] Verify manifest changes are correct
            - [ ] Test addon installation locally

            ---

            ü§ñ Auto-generated by GitHub Actions
            Workflow: Auto-Patch Odoo Issues
          labels: |
            auto-fix
            dependencies
            manifest

      - name: Auto-merge if safe
        if: steps.changes.outputs.has_changes == 'true' && steps.autofix.outcome == 'success'
        run: |
          echo "Auto-fix succeeded - PR created for review"
          echo "Manual review recommended before merging"

  validate-acl:
    name: Validate Access Control Lists
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Validate ACL files
        run: |
          python scripts/validate-acl.py
        continue-on-error: true

  check-translations:
    name: Check Translation Files
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Validate i18n files
        run: |
          # Check for missing translations
          for addon in addons/*/; do
            if [ -d "$addon" ]; then
              addon_name=$(basename "$addon")

              # Check if i18n directory exists
              if [ ! -d "$addon/i18n" ]; then
                echo "‚ö†Ô∏è  Missing i18n directory in $addon_name"
              fi

              # Check for .pot template
              if [ ! -f "$addon/i18n/$addon_name.pot" ]; then
                echo "‚ö†Ô∏è  Missing .pot template in $addon_name"
              fi
            fi
          done

  dependency-graph:
    name: Generate Dependency Graph
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install graphviz
        run: sudo apt-get install -y graphviz

      - name: Generate dependency graph
        run: |
          python scripts/generate-dependency-graph.py
        continue-on-error: true

      - name: Upload graph artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: dependency-graph
          path: docs/dependency-graph.png
          retention-days: 30
