name: git-ops

on:
  workflow_dispatch:
    inputs:
      branch:   { description: 'Target branch', default: 'gitops/push', required: true }
      message:  { description: 'Commit message',  default: 'chore(gitops): automated update', required: true }
      kv_key:   { description: 'Optional KV key to write', required: false }
      kv_value: { description: 'Optional KV value to write', required: false }
  repository_dispatch:
    types: [git-ops]

permissions:
  contents: write
  pull-requests: write

jobs:
  run:
    runs-on: ubuntu-latest
    steps:
      - name: Resolve inputs
        id: inp
        run: |
          EVENT="${{ github.event_name }}"
          if [ "$EVENT" = "workflow_dispatch" ]; then
            BR="${{ github.event.inputs.branch }}"
            MSG="${{ github.event.inputs.message }}"
            KV_KEY="${{ github.event.inputs.kv_key }}"
            KV_VAL="${{ github.event.inputs.kv_value }}"
          else
            BR="$(jq -r '.client_payload.branch // "gitops/push"'    < "$GITHUB_EVENT_PATH")"
            MSG="$(jq -r '.client_payload.message // "chore(gitops): repo-dispatch update"' < "$GITHUB_EVENT_PATH")"
            KV_KEY="$(jq -r '.client_payload.kv_key // empty'        < "$GITHUB_EVENT_PATH")"
            KV_VAL="$(jq -r '.client_payload.kv_value // empty'      < "$GITHUB_EVENT_PATH")"
          fi
          echo "branch=$BR"   >> $GITHUB_OUTPUT
          echo "message=$MSG" >> $GITHUB_OUTPUT
          echo "kv_key=$KV_KEY"   >> $GITHUB_OUTPUT
          echo "kv_value=$KV_VAL" >> $GITHUB_OUTPUT

      - name: Create App token (installation)
        id: app-token
        uses: actions/create-github-app-token@v2
        with:
          app-id: ${{ vars.APP_ID }}
          private-key: ${{ secrets.PRIVATE_KEY }}

      - uses: actions/checkout@v4
        with:
          token: ${{ steps.app-token.outputs.token }}
          persist-credentials: false

      - name: Configure bot identity
        run: |
          USER_ID=$(gh api "/users/${{ steps.app-token.outputs.app-slug }}[bot]" --jq .id)
          git config --global user.name "${{ steps.app-token.outputs.app-slug }}[bot]"
          git config --global user.email "${USER_ID}+${{ steps.app-token.outputs.app-slug }}[bot]@users.noreply.github.com"
        env:
          GH_TOKEN: ${{ steps.app-token.outputs.token }}

      - name: Apply change
        run: |
          mkdir -p ops/kv
          if [ -n "${{ steps.inp.outputs.kv_key }}" ]; then
            printf '%s\n' "${{ steps.inp.outputs.kv_value }}" > "ops/kv/${{ steps.inp.outputs.kv_key }}.txt"
          else
            date -u > ops/last_run.txt
          fi

      - name: Commit & push
        run: |
          git checkout -B "${{ steps.inp.outputs.branch }}"
          git add -A
          git commit -m "${{ steps.inp.outputs.message }}" || echo "No changes to commit."
          git push -f origin "${{ steps.inp.outputs.branch }}"

      - name: Open/Update PR
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ steps.app-token.outputs.token }}
          branch: ${{ steps.inp.outputs.branch }}
          title: ${{ steps.inp.outputs.message }}
          body: "Automated via pulser-hub repo-dispatch"
          base: main
