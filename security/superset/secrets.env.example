# Apache Superset Production Secrets
# SECURITY: Store actual values in DigitalOcean App Platform secrets, NOT in repository

# Generated: 2025-10-30
# Deployment: DigitalOcean App Platform
# Region: Singapore (sgp)

# CRITICAL: Change these values before production deployment
# Generate new SECRET_KEY: openssl rand -base64 42

# Superset Secret Key (MUST be unique and secure in production)
SUPERSET_SECRET_KEY=8UToEhL2C0ovd7S4maFPsi7e4mU05pqAH907G5yUaLsr9prnJdHu7+6k

# Supabase PostgreSQL Configuration (Production Metadata Database)
# Project: spdtwktxdalcfigzeqrz
# Connection: Connection pooler (6543) for high concurrency
DATABASE_DIALECT=postgresql
DATABASE_USER=postgres.spdtwktxdalcfigzeqrz
DATABASE_PASSWORD=Postgres_26  # Supabase password
DATABASE_HOST=aws-1-us-east-1.pooler.supabase.com
DATABASE_PORT=6543
DATABASE_DB=postgres

# Redis Configuration (DigitalOcean Managed Redis or DO Container)
REDIS_HOST=${REDIS_HOST}  # From DO Redis instance or internal service
REDIS_PORT=6379
REDIS_CELERY_DB=0
REDIS_RESULTS_DB=1
REDIS_PASSWORD=${REDIS_PASSWORD}  # If using managed Redis

# Admin Account
SUPERSET_ADMIN_USERNAME=admin
SUPERSET_ADMIN_PASSWORD=Postgres_26  # Same as database password for consistency
SUPERSET_ADMIN_FIRST_NAME=Admin
SUPERSET_ADMIN_LAST_NAME=User
SUPERSET_ADMIN_EMAIL=admin@insightpulseai.net

# Application Configuration
SUPERSET_ENV=production
SUPERSET_LOAD_EXAMPLES=no  # Disable in production
FLASK_DEBUG=false  # MUST be false in production
SUPERSET_LOG_LEVEL=warning  # info, warning, error, critical

# URL Configuration
SUPERSET_WEBSERVER_PROTOCOL=https
SUPERSET_WEBSERVER_ADDRESS=0.0.0.0
SUPERSET_WEBSERVER_PORT=8088
SUPERSET_APP_ROOT=/superset  # Path prefix for reverse proxy

# Security Headers
ENABLE_CORS=false  # Set to true if needed with proper CORS_OPTIONS
TALISMAN_ENABLED=true
TALISMAN_CONFIG={
    "content_security_policy": {
        "default-src": ["'self'"],
        "script-src": ["'self'", "'unsafe-inline'", "'unsafe-eval'"],
        "style-src": ["'self'", "'unsafe-inline'"],
        "img-src": ["'self'", "data:", "blob:"],
        "font-src": ["'self'"],
        "connect-src": ["'self'"]
    },
    "force_https": true,
    "strict_transport_security": true,
    "strict_transport_security_max_age": 31536000
}

# Feature Flags
FEATURE_FLAGS={
    "ALERT_REPORTS": true,
    "DASHBOARD_RBAC": true,
    "EMBEDDED_SUPERSET": false,
    "ENABLE_TEMPLATE_PROCESSING": true
}

# Performance Configuration
SUPERSET_WORKERS=4  # Adjust based on instance size
SUPERSET_WORKER_CLASS=gevent  # Async worker for high concurrency
SUPERSET_WORKER_CONNECTIONS=1000
SUPERSET_TIMEOUT=120
SUPERSET_MAX_REQUESTS=5000
SUPERSET_MAX_REQUESTS_JITTER=500

# Cache Configuration
CACHE_DEFAULT_TIMEOUT=300  # 5 minutes
DATA_CACHE_DEFAULT_TIMEOUT=3600  # 1 hour
THUMBNAIL_CACHE_DEFAULT_TIMEOUT=86400  # 24 hours

# Celery Configuration (for async queries and alerts)
CELERY_BROKER_URL=redis://${REDIS_HOST}:${REDIS_PORT}/${REDIS_CELERY_DB}
CELERY_RESULT_BACKEND=redis://${REDIS_HOST}:${REDIS_PORT}/${REDIS_RESULTS_DB}

# OAuth Configuration (Optional - for SSO integration)
# AUTH_TYPE=AUTH_OAUTH
# OAUTH_PROVIDERS=[...]

# SMTP Configuration (for email alerts)
SMTP_HOST=${SMTP_HOST}
SMTP_PORT=587
SMTP_STARTTLS=true
SMTP_SSL_SERVER_AUTH=true
SMTP_SSL=false
SMTP_USER=${SMTP_USER}
SMTP_PASSWORD=${SMTP_PASSWORD}
SMTP_MAIL_FROM=noreply@insightpulseai.net

# Slack Configuration (for alert notifications)
SLACK_API_TOKEN=${SLACK_API_TOKEN}
SLACK_CHANNEL=#superset-alerts

# Security Notes:
# 1. NEVER commit this file with actual secrets to git
# 2. Use DigitalOcean App Platform environment variables for production
# 3. Rotate SECRET_KEY regularly (every 90 days)
# 4. Use strong passwords (minimum 16 characters, mixed case, numbers, symbols)
# 5. Enable 2FA for admin accounts
# 6. Monitor access logs for suspicious activity
# 7. Backup database regularly (automated via Supabase)
# 8. Test disaster recovery procedures

# Deployment Checklist:
# □ Generate new SUPERSET_SECRET_KEY
# □ Set strong SUPERSET_ADMIN_PASSWORD
# □ Configure Supabase PostgreSQL connection
# □ Setup Redis instance (DO Managed or container)
# □ Configure SMTP for email alerts
# □ Setup Slack webhook for notifications
# □ Enable HTTPS enforcement
# □ Configure Content Security Policy
# □ Review and test RLS policies
# □ Setup automated backups
# □ Configure monitoring and alerting
# □ Document recovery procedures
